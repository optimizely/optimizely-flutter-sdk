name: flutter sdk

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  unit_test_coverage:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
    - name: Install app dependencies
      run: flutter pub get
    - name: Test app
      run: flutter test --coverage
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        
  integration_android_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # You should create a personal access token and store it in your repository
        token: ${{ secrets.CI_USER_TOKEN }}
        repository: 'optimizely/travisci-tools'
        path: 'home/runner/travisci-tools'
        ref: 'master'
    - name: set SDK Branch if PR
      env:
        HEAD_REF: ${{ github.head_ref }}
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        echo "SDK_BRANCH=$HEAD_REF" >> $GITHUB_ENV
    - name: set SDK Branch if not pull request
      env:
        REF_NAME: ${{ github.ref_name }}
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "SDK_BRANCH=$REF_NAME" >> $GITHUB_ENV
        echo "TRAVIS_BRANCH=$REF_NAME" >> $GITHUB_ENV
    - name: Trigger build
      env:
        SDK: android
        BUILD_NUMBER: ${{ github.run_id }}
        TESTAPP_BRANCH: master
        GITHUB_TOKEN: ${{ secrets.CI_USER_TOKEN }}
        EVENT_TYPE: ${{ github.event_name }}
        REPO_SLUG: 'optimizely/optimizely-flutter-testapp'
        PULL_REQUEST_SLUG: ${{ github.repository }}
        UPSTREAM_REPO: ${{ github.repository }}
        PULL_REQUEST_SHA: ${{ github.event.pull_request.head.sha }}
        PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        UPSTREAM_SHA: ${{ github.sha }}
        TOKEN: ${{ secrets.CI_USER_TOKEN }}
        EVENT_MESSAGE: ${{ github.event.message }}
        HOME: 'home/runner'
      run: |
        home/runner/travisci-tools/trigger-script-with-status-update.sh
        
  integration_ios_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # You should create a personal access token and store it in your repository
        token: ${{ secrets.CI_USER_TOKEN }}
        repository: 'optimizely/travisci-tools'
        path: 'home/runner/travisci-tools'
        ref: 'master'
    - name: set SDK Branch if PR
      env:
        HEAD_REF: ${{ github.head_ref }}
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        echo "SDK_BRANCH=$HEAD_REF" >> $GITHUB_ENV
    - name: set SDK Branch if not pull request
      env:
        REF_NAME: ${{ github.ref_name }}
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "SDK_BRANCH=$REF_NAME" >> $GITHUB_ENV
        echo "TRAVIS_BRANCH=$REF_NAME" >> $GITHUB_ENV
    - name: Trigger build
      env:
        SDK: ios
        BUILD_NUMBER: ${{ github.run_id }}
        TESTAPP_BRANCH: master
        GITHUB_TOKEN: ${{ secrets.CI_USER_TOKEN }}
        EVENT_TYPE: ${{ github.event_name }}
        REPO_SLUG: 'optimizely/optimizely-flutter-testapp'
        PULL_REQUEST_SLUG: ${{ github.repository }}
        UPSTREAM_REPO: ${{ github.repository }}
        PULL_REQUEST_SHA: ${{ github.event.pull_request.head.sha }}
        PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        UPSTREAM_SHA: ${{ github.sha }}
        TOKEN: ${{ secrets.CI_USER_TOKEN }}
        EVENT_MESSAGE: ${{ github.event.message }}
        HOME: 'home/runner'
      run: |
        home/runner/travisci-tools/trigger-script-with-status-update.sh
        
  build_test_android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta' or 'master'
          cache: true
          cache-key: 'flutter-:os:-:arch:-:channel:-:version:-:hash:' # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
      - run: flutter --version

      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.5'
      - run: flutter pub get
      - run: flutter test
  
  build_test_ios:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
    - run: flutter pub get
    - run: flutter test
